name: aws CI/CD

on:
  push:
    branches: [ "develop" ]

env:
  S3_BUCKET_NAME: lof-deploy
  
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
        shell : bash    
        
      - name: Build with Gradlew
        run: ./gradlew clean build
        shell : bash    
      
      - name: Make Directory
        run: mkdir deploy
        
      - name: Copy Jar
        run: cp ./build/libs/*.jar ./deploy
        
      - name: Copy appspec.yml
        run: cp appspec.yml ./deploy

      - name: Copy script
        run: cp ./scripts/*.sh ./deploy

      - name: Make zip file # 압축된 파일로
        run: zip -r ./lof.zip ./deploy
        shell: bash
        
      - name: Configure AWS credentials # S3에 이전 스텝에서 압축한 파일을 S3에 업로드하기 위해 aws cli credentials하는 과정. aws 서비스를 사용하기 위한 인증.
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.DEV_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.DEV_AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2
         
      - name: upload to s3 # aws cli credential을 이용해 s3에 업로드 후 배포를 생성하는 작업
        run: aws s3 cp --region ap-northeast-2 ./lof.zip s3://$S3_BUCKET_NAME/
         
      - name: Deploy # 어플리케이션의 dev 배포 그룹에 배포 생성
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.DEV_AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.DEV_AWS_SECRET_ACCESS_KEY }}
        run: |
          aws deploy create-deployment --application-name lof-dev-application --deployment-group-name dev --file-exists-behavior OVERWRITE --s3-location bucket=lof-dev-deploy,bundleType=zip,key=lof.zip --region ap-northeast-2
